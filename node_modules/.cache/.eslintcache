[{"/home/krystian/CodersLab_JavaScript_Brudnopis/employee-app/src/index.js":"1","/home/krystian/CodersLab_JavaScript_Brudnopis/employee-app/src/reportWebVitals.js":"2","/home/krystian/CodersLab_JavaScript_Brudnopis/employee-app/src/containers/App.js":"3","/home/krystian/CodersLab_JavaScript_Brudnopis/employee-app/src/components/Employees/EmployeeDetails/EmployeeDetails.js":"4","/home/krystian/CodersLab_JavaScript_Brudnopis/employee-app/src/components/Employees/Employees.js":"5","/home/krystian/CodersLab_JavaScript_Brudnopis/employee-app/src/components/Employees/Employee/Employee.js":"6","/home/krystian/CodersLab_JavaScript_Brudnopis/Emplyee-App/src/index.js":"7","/home/krystian/CodersLab_JavaScript_Brudnopis/Emplyee-App/src/reportWebVitals.js":"8","/home/krystian/CodersLab_JavaScript_Brudnopis/Emplyee-App/src/containers/App.js":"9","/home/krystian/CodersLab_JavaScript_Brudnopis/Emplyee-App/src/components/Employees/Employees.js":"10","/home/krystian/CodersLab_JavaScript_Brudnopis/Emplyee-App/src/components/Employees/EmployeeDetails/EmployeeDetails.js":"11","/home/krystian/CodersLab_JavaScript_Brudnopis/Emplyee-App/src/components/Employees/Employee/Employee.js":"12"},{"size":461,"mtime":1619267527666,"results":"13","hashOfConfig":"14"},{"size":362,"mtime":1619000415949,"results":"15","hashOfConfig":"14"},{"size":4799,"mtime":1619267050177,"results":"16","hashOfConfig":"14"},{"size":517,"mtime":1619267316187,"results":"17","hashOfConfig":"14"},{"size":870,"mtime":1619267294601,"results":"18","hashOfConfig":"14"},{"size":346,"mtime":1618996231763,"results":"19","hashOfConfig":"14"},{"size":461,"mtime":1619267527666,"results":"20","hashOfConfig":"21"},{"size":362,"mtime":1619000415949,"results":"22","hashOfConfig":"21"},{"size":4677,"mtime":1619282073762,"results":"23","hashOfConfig":"21"},{"size":884,"mtime":1619280373738,"results":"24","hashOfConfig":"21"},{"size":517,"mtime":1619267316187,"results":"25","hashOfConfig":"21"},{"size":346,"mtime":1618996231763,"results":"26","hashOfConfig":"21"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"tb6rkl",{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"31"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"31"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"83t8wf",{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"/home/krystian/CodersLab_JavaScript_Brudnopis/employee-app/src/index.js",[],"/home/krystian/CodersLab_JavaScript_Brudnopis/employee-app/src/reportWebVitals.js",[],["55","56"],"/home/krystian/CodersLab_JavaScript_Brudnopis/employee-app/src/containers/App.js",["57","58"],"import React, {useState, useEffect } from 'react';\nimport './App.css';\nimport Employees from '../components/Employees/Employees';\n// import axios from 'axios';\nimport EmployeeDetails from '../components/Employees/EmployeeDetails/EmployeeDetails';\n// Pobieranie danych z komponetu Reacta wymaga zastosaowania zaczepów useState, useEffect\n\nconst App = () => {\n  // Zaczep useState służy do przechowywania odpowiedzi w danych \n  const [employees, setEmployees] = useState([]);\n  const [selectedEmployee, setSelectedEmployee] = useState(null); // w SelectedEmployee przechowywana jest informacja o jednym konkretnym pracowniku, dopóki żaden nie zostanie wybrany będzie wyświetlany 'null'\n\n  // Zaczep useEffect służy do wykonania żądania\n  useEffect(()=> {   \n    // Na adres puszczam żądanie GET aby dostać listę z pracownikami, która będzie zapisywana w stacie App, która będzie przekazywana do komponentu <Employees/>, najpierw komponenty się wyrenderują a potem zostanie puszczone zapytanie HTTP, po otrzymaniu odpowiedzi asynchronicznie zaktualizuje się nasz stan\n    fetch('http://dummy.restapiexample.com/api/v1/employees', {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n      })\n    })\n    .then(res => {\n      res.json()\n    })\n    .then(res => {\n      console.log(res);\n      console.log(res.data.data);\n\n      const employeeArray = res.data.data;\n      // W stałek employees zapisuje to co nam zwraca ta metoda\n      setEmployees({employees: employeeArray});\n      // Teraz pracownicy z  początkowego stanu tablicy 'useState' employees -> zostają przypsiani do stałej employeeArray\n    })\n    .catch(error => console.log(error))\n  })\n\n  // Metoda która będzie się wywoływała po wciśnięciu jednego pracownika (wciśnięciu jednego przycisku), przekazywane jest do niej id bo endpoint wymaga id\n  const showSelectedEmployeeHandler = (id) => {\n    console.log(\"Employee nr: \" + id);\n    fetch(\"http://dummy.restapiexample.com/api/v1/employee/\" + id , {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n      })\n    })\n    .then(res => {\n      res.json()\n    })\n    .then(res => {\n      // po przekazaniu argumentu z żądania metoda then określa co ma się stać kiedy otrzyma odpowiedź, która po otrzymaniu przypiszemy do funkcji w stacie \n      setSelectedEmployee({\n        selectedEmployee: res.data.data\n        //Tutaj zaszeregowane będą dane dotyczą imienia, wieku itd.\n      });\n    });\n  }\n\n  const saveEmployeeHandler = () => {\n    // obiekt JavaScriptowy (pracownik) do zapisu\n    const employeeToSave = {\n      \"name\": \"Tomek123\",\n      \"salary\": \"4500\",\n      \"age\": \"25\"\n    }\n    // Żądanie POST\n    fetch(\"http://dummy.restapiexample.com/api/v1/create\",\n    {\n      method: \"POST\",\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: {\"name\":\"test\",\"salary\":\"123\",\"age\":\"23\"},//Dane które będziemy zapisywać,\n      // Jak powinno wyglądać ciało obiektu JavaScriptowego\n    }\n      ).then(response => {\n      console.log(response);\n    });\n  }\n\n  const deleteEmployeeHandler = () => {\n    // Będzie wysyłało zapytanie http z id na sztywno wpisanym w kodzie\n    const id = 2; // Stała id obiektu do usunięcia\n    fetch(\"http://dummy.restapiexample.com/api/v1/delete/\" + id, {\n      method: \"DELETE\",\n    })  \n    .then(r => r.json())\n    .then(\n      res => {\n        console.log(res);\n      })\n      .catch(err => console.log(err))\n  }\n  // Sprawdzenie aktualnej wartości selectedEmployee, jeżeli będzie różna od zera , to będzie tworzony komponent EmplyeeDetails\n  if(selectedEmployee !== null){ \n    return (\n    selectedEmployee = <EmployeeDetails \n    name={selectedEmployee.employee_name}\n    salary={selectedEmployee.employee_salary}\n    age={selectedEmployee.employee_age}\n    /> )\n  }\n  return (\n\n// W <Employees/> odwołuje się do stat-a employess\n// Dopóki żadne pracownik nie zostanie wybrany będzie wyświetlany null ze stat-a\n      // \"saveEmployeeHandler\" Przycisk który na sztywno wpisuje dane pracownika w kod\n      <div className='App'> \n        {selectedEmployee}\n        <h1>Employees</h1>\n        <Employees employees={employees} showSelectedEmployee={showSelectedEmployeeHandler}/>\n        <button onClick={saveEmployeeHandler} className=\"UpdateButton\">Save Employee</button>\n        <button onClick={deleteEmployeeHandler} className=\"UpdateButton\">Delete Employee</button>\n      </div>\n        // W propsach przekazywana jest metoda showSelectedEmployeeHandler nazwa propsa to: 'showSelectedEmployee' \n        // metoda showSelectedEmployeeHandler przekazywana jest do komponentu employees\n    );\n  }\n\nexport default App;","/home/krystian/CodersLab_JavaScript_Brudnopis/employee-app/src/components/Employees/EmployeeDetails/EmployeeDetails.js",[],"/home/krystian/CodersLab_JavaScript_Brudnopis/employee-app/src/components/Employees/Employees.js",["59"],"import React from 'react';\nimport styles from './Employees.module.css';\nimport Employee from './Employee/Employee';\n\nconst Employees = ({showSelectedEmployee}) => {\n\n        // Tu tworzeni są pracownicy, przerabiani są pracownicy z tablicy na obiekty javascript-owi\n        // console.log(employees);\n        const employees = employees.map((employee, index) => {\n            //zwracany komponent Employee\n            return (<Employee key={employee.id} name={employee.employee_name} showSelectedEmployee={showSelectedEmployee} id={employee.id}/>);\n            // do pojedyńczego  komponentu przekazywana dalej jest metoda showEmployeeHandler a nazwa propsa to: 'showSelectedEmployee'\n        });\n\n        //Tu znajdują się pracownicy     \n        return (<div className={styles.Employees}> \n            {employees} \n        </div>)\n    }\n\nexport default Employees;","/home/krystian/CodersLab_JavaScript_Brudnopis/employee-app/src/components/Employees/Employee/Employee.js",[],"/home/krystian/CodersLab_JavaScript_Brudnopis/Emplyee-App/src/index.js",[],["60","61"],"/home/krystian/CodersLab_JavaScript_Brudnopis/Emplyee-App/src/reportWebVitals.js",[],"/home/krystian/CodersLab_JavaScript_Brudnopis/Emplyee-App/src/containers/App.js",[],"/home/krystian/CodersLab_JavaScript_Brudnopis/Emplyee-App/src/components/Employees/Employees.js",[],"/home/krystian/CodersLab_JavaScript_Brudnopis/Emplyee-App/src/components/Employees/EmployeeDetails/EmployeeDetails.js",[],"/home/krystian/CodersLab_JavaScript_Brudnopis/Emplyee-App/src/components/Employees/Employee/Employee.js",[],{"ruleId":"62","replacedBy":"63"},{"ruleId":"64","replacedBy":"65"},{"ruleId":"66","severity":1,"message":"67","line":64,"column":11,"nodeType":"68","messageId":"69","endLine":64,"endColumn":25},{"ruleId":"70","severity":1,"message":"71","line":100,"column":5,"nodeType":"68","messageId":"72","endLine":100,"endColumn":21},{"ruleId":"73","severity":1,"message":"74","line":9,"column":27,"nodeType":"68","messageId":"75","endLine":9,"endColumn":36},{"ruleId":"62","replacedBy":"76"},{"ruleId":"64","replacedBy":"77"},"no-native-reassign",["78"],"no-negated-in-lhs",["79"],"no-unused-vars","'employeeToSave' is assigned a value but never used.","Identifier","unusedVar","no-const-assign","'selectedEmployee' is constant.","const","no-use-before-define","'employees' was used before it was defined.","usedBeforeDefined",["78"],["79"],"no-global-assign","no-unsafe-negation"]