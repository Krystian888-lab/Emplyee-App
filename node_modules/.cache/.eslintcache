[{"/home/krystian/CodersLab_JavaScript_Brudnopis/employee-app/src/index.js":"1","/home/krystian/CodersLab_JavaScript_Brudnopis/employee-app/src/reportWebVitals.js":"2","/home/krystian/CodersLab_JavaScript_Brudnopis/employee-app/src/containers/App.js":"3","/home/krystian/CodersLab_JavaScript_Brudnopis/employee-app/src/components/Employees/EmployeeDetails/EmployeeDetails.js":"4","/home/krystian/CodersLab_JavaScript_Brudnopis/employee-app/src/components/Employees/Employees.js":"5","/home/krystian/CodersLab_JavaScript_Brudnopis/employee-app/src/components/Employees/Employee/Employee.js":"6","/home/krystian/CodersLab_JavaScript_Brudnopis/Emplyee-App/src/index.js":"7","/home/krystian/CodersLab_JavaScript_Brudnopis/Emplyee-App/src/reportWebVitals.js":"8","/home/krystian/CodersLab_JavaScript_Brudnopis/Emplyee-App/src/containers/App.js":"9","/home/krystian/CodersLab_JavaScript_Brudnopis/Emplyee-App/src/components/Employees/Employees.js":"10","/home/krystian/CodersLab_JavaScript_Brudnopis/Emplyee-App/src/components/Employees/EmployeeDetails/EmployeeDetails.js":"11","/home/krystian/CodersLab_JavaScript_Brudnopis/Emplyee-App/src/components/Employees/Employee/Employee.js":"12","/home/krystian/CodersLab_JavaScript_Brudnopis/Emplyee-App/src/containers/Fetch.js":"13"},{"size":461,"mtime":1619267527666,"results":"14","hashOfConfig":"15"},{"size":362,"mtime":1619000415949,"results":"16","hashOfConfig":"15"},{"size":4799,"mtime":1619267050177,"results":"17","hashOfConfig":"15"},{"size":517,"mtime":1619267316187,"results":"18","hashOfConfig":"15"},{"size":870,"mtime":1619267294601,"results":"19","hashOfConfig":"15"},{"size":346,"mtime":1618996231763,"results":"20","hashOfConfig":"15"},{"size":473,"mtime":1619692673906,"results":"21","hashOfConfig":"22"},{"size":362,"mtime":1619000415949,"results":"23","hashOfConfig":"22"},{"size":5603,"mtime":1620340504485,"results":"24","hashOfConfig":"22"},{"size":1050,"mtime":1620160945434,"results":"25","hashOfConfig":"22"},{"size":737,"mtime":1620317808249,"results":"26","hashOfConfig":"22"},{"size":515,"mtime":1620078672985,"results":"27","hashOfConfig":"22"},{"size":1324,"mtime":1620334753830,"results":"28","hashOfConfig":"22"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"tb6rkl",{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"33"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"33"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},"83t8wf",{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"60"},"/home/krystian/CodersLab_JavaScript_Brudnopis/employee-app/src/index.js",[],"/home/krystian/CodersLab_JavaScript_Brudnopis/employee-app/src/reportWebVitals.js",[],["61","62"],"/home/krystian/CodersLab_JavaScript_Brudnopis/employee-app/src/containers/App.js",["63","64"],"import React, {useState, useEffect } from 'react';\nimport './App.css';\nimport Employees from '../components/Employees/Employees';\n// import axios from 'axios';\nimport EmployeeDetails from '../components/Employees/EmployeeDetails/EmployeeDetails';\n// Pobieranie danych z komponetu Reacta wymaga zastosaowania zaczepów useState, useEffect\n\nconst App = () => {\n  // Zaczep useState służy do przechowywania odpowiedzi w danych \n  const [employees, setEmployees] = useState([]);\n  const [selectedEmployee, setSelectedEmployee] = useState(null); // w SelectedEmployee przechowywana jest informacja o jednym konkretnym pracowniku, dopóki żaden nie zostanie wybrany będzie wyświetlany 'null'\n\n  // Zaczep useEffect służy do wykonania żądania\n  useEffect(()=> {   \n    // Na adres puszczam żądanie GET aby dostać listę z pracownikami, która będzie zapisywana w stacie App, która będzie przekazywana do komponentu <Employees/>, najpierw komponenty się wyrenderują a potem zostanie puszczone zapytanie HTTP, po otrzymaniu odpowiedzi asynchronicznie zaktualizuje się nasz stan\n    fetch('http://dummy.restapiexample.com/api/v1/employees', {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n      })\n    })\n    .then(res => {\n      res.json()\n    })\n    .then(res => {\n      console.log(res);\n      console.log(res.data.data);\n\n      const employeeArray = res.data.data;\n      // W stałek employees zapisuje to co nam zwraca ta metoda\n      setEmployees({employees: employeeArray});\n      // Teraz pracownicy z  początkowego stanu tablicy 'useState' employees -> zostają przypsiani do stałej employeeArray\n    })\n    .catch(error => console.log(error))\n  })\n\n  // Metoda która będzie się wywoływała po wciśnięciu jednego pracownika (wciśnięciu jednego przycisku), przekazywane jest do niej id bo endpoint wymaga id\n  const showSelectedEmployeeHandler = (id) => {\n    console.log(\"Employee nr: \" + id);\n    fetch(\"http://dummy.restapiexample.com/api/v1/employee/\" + id , {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n      })\n    })\n    .then(res => {\n      res.json()\n    })\n    .then(res => {\n      // po przekazaniu argumentu z żądania metoda then określa co ma się stać kiedy otrzyma odpowiedź, która po otrzymaniu przypiszemy do funkcji w stacie \n      setSelectedEmployee({\n        selectedEmployee: res.data.data\n        //Tutaj zaszeregowane będą dane dotyczą imienia, wieku itd.\n      });\n    });\n  }\n\n  const saveEmployeeHandler = () => {\n    // obiekt JavaScriptowy (pracownik) do zapisu\n    const employeeToSave = {\n      \"name\": \"Tomek123\",\n      \"salary\": \"4500\",\n      \"age\": \"25\"\n    }\n    // Żądanie POST\n    fetch(\"http://dummy.restapiexample.com/api/v1/create\",\n    {\n      method: \"POST\",\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: {\"name\":\"test\",\"salary\":\"123\",\"age\":\"23\"},//Dane które będziemy zapisywać,\n      // Jak powinno wyglądać ciało obiektu JavaScriptowego\n    }\n      ).then(response => {\n      console.log(response);\n    });\n  }\n\n  const deleteEmployeeHandler = () => {\n    // Będzie wysyłało zapytanie http z id na sztywno wpisanym w kodzie\n    const id = 2; // Stała id obiektu do usunięcia\n    fetch(\"http://dummy.restapiexample.com/api/v1/delete/\" + id, {\n      method: \"DELETE\",\n    })  \n    .then(r => r.json())\n    .then(\n      res => {\n        console.log(res);\n      })\n      .catch(err => console.log(err))\n  }\n  // Sprawdzenie aktualnej wartości selectedEmployee, jeżeli będzie różna od zera , to będzie tworzony komponent EmplyeeDetails\n  if(selectedEmployee !== null){ \n    return (\n    selectedEmployee = <EmployeeDetails \n    name={selectedEmployee.employee_name}\n    salary={selectedEmployee.employee_salary}\n    age={selectedEmployee.employee_age}\n    /> )\n  }\n  return (\n\n// W <Employees/> odwołuje się do stat-a employess\n// Dopóki żadne pracownik nie zostanie wybrany będzie wyświetlany null ze stat-a\n      // \"saveEmployeeHandler\" Przycisk który na sztywno wpisuje dane pracownika w kod\n      <div className='App'> \n        {selectedEmployee}\n        <h1>Employees</h1>\n        <Employees employees={employees} showSelectedEmployee={showSelectedEmployeeHandler}/>\n        <button onClick={saveEmployeeHandler} className=\"UpdateButton\">Save Employee</button>\n        <button onClick={deleteEmployeeHandler} className=\"UpdateButton\">Delete Employee</button>\n      </div>\n        // W propsach przekazywana jest metoda showSelectedEmployeeHandler nazwa propsa to: 'showSelectedEmployee' \n        // metoda showSelectedEmployeeHandler przekazywana jest do komponentu employees\n    );\n  }\n\nexport default App;","/home/krystian/CodersLab_JavaScript_Brudnopis/employee-app/src/components/Employees/EmployeeDetails/EmployeeDetails.js",[],"/home/krystian/CodersLab_JavaScript_Brudnopis/employee-app/src/components/Employees/Employees.js",["65"],"import React from 'react';\nimport styles from './Employees.module.css';\nimport Employee from './Employee/Employee';\n\nconst Employees = ({showSelectedEmployee}) => {\n\n        // Tu tworzeni są pracownicy, przerabiani są pracownicy z tablicy na obiekty javascript-owi\n        // console.log(employees);\n        const employees = employees.map((employee, index) => {\n            //zwracany komponent Employee\n            return (<Employee key={employee.id} name={employee.employee_name} showSelectedEmployee={showSelectedEmployee} id={employee.id}/>);\n            // do pojedyńczego  komponentu przekazywana dalej jest metoda showEmployeeHandler a nazwa propsa to: 'showSelectedEmployee'\n        });\n\n        //Tu znajdują się pracownicy     \n        return (<div className={styles.Employees}> \n            {employees} \n        </div>)\n    }\n\nexport default Employees;","/home/krystian/CodersLab_JavaScript_Brudnopis/employee-app/src/components/Employees/Employee/Employee.js",[],"/home/krystian/CodersLab_JavaScript_Brudnopis/Emplyee-App/src/index.js",[],["66","67"],"/home/krystian/CodersLab_JavaScript_Brudnopis/Emplyee-App/src/reportWebVitals.js",[],"/home/krystian/CodersLab_JavaScript_Brudnopis/Emplyee-App/src/containers/App.js",[],"/home/krystian/CodersLab_JavaScript_Brudnopis/Emplyee-App/src/components/Employees/Employees.js",[],"/home/krystian/CodersLab_JavaScript_Brudnopis/Emplyee-App/src/components/Employees/EmployeeDetails/EmployeeDetails.js",[],"/home/krystian/CodersLab_JavaScript_Brudnopis/Emplyee-App/src/components/Employees/Employee/Employee.js",[],"/home/krystian/CodersLab_JavaScript_Brudnopis/Emplyee-App/src/containers/Fetch.js",["68"],"import React, { useState, useEffect } from \"react\";\n\nfunction useFetch(uri) {\n  // const [data, setData] = useState();\n  const [error, setError] = useState();\n  const [loading, setLoading] = useState(true);\n  const [employees, setEmployees] = useState([]);\n\n  useEffect(() => {\n    if (!uri) return;\n    fetch(uri)\n      // .then(data => data.json())\n      // .then(setData)\n\n      .then(res => res.json())\n    .then(res => {\n      console.log(res.data);\n      console.log(res.status);\n\n      const employeeArray = res.data;\n      console.log(employeeArray, \"employeeArray\")\n      // W stałej employees zapisuje to co nam zwraca ta metoda\n      setEmployees(employeeArray);\n      // Teraz pracownicy z  początkowego stanu tablicy 'useState' employees -> zostają przypsiani do stałej employeeArray\n    })\n\n      .then(() => setLoading(false))\n      .catch(setError)\n      .catch(error => console.log(error));\n  }, [uri]);\n\n  return {\n    loading,\n    // data,\n    error\n  };\n}\n\nexport default function Fetch({\n  uri,\n  // renderSuccess,\n  loadingFallback = <p>loading...</p>,\n  renderError = error => <pre>{JSON.stringify(error, null, 2)}</pre>\n}) {\n  const { loading, error } = useFetch(uri);\n  if (loading) return loadingFallback;\n  if (error) return renderError(error);\n  // if (data) return renderSuccess({ data });\n}",["69","70"],{"ruleId":"71","replacedBy":"72"},{"ruleId":"73","replacedBy":"74"},{"ruleId":"75","severity":1,"message":"76","line":64,"column":11,"nodeType":"77","messageId":"78","endLine":64,"endColumn":25},{"ruleId":"79","severity":1,"message":"80","line":100,"column":5,"nodeType":"77","messageId":"81","endLine":100,"endColumn":21},{"ruleId":"82","severity":1,"message":"83","line":9,"column":27,"nodeType":"77","messageId":"84","endLine":9,"endColumn":36},{"ruleId":"71","replacedBy":"85"},{"ruleId":"73","replacedBy":"86"},{"ruleId":"75","severity":1,"message":"87","line":7,"column":10,"nodeType":"77","messageId":"78","endLine":7,"endColumn":19},{"ruleId":"71","replacedBy":"88"},{"ruleId":"73","replacedBy":"89"},"no-native-reassign",["90"],"no-negated-in-lhs",["91"],"no-unused-vars","'employeeToSave' is assigned a value but never used.","Identifier","unusedVar","no-const-assign","'selectedEmployee' is constant.","const","no-use-before-define","'employees' was used before it was defined.","usedBeforeDefined",["90"],["91"],"'employees' is assigned a value but never used.",["90"],["91"],"no-global-assign","no-unsafe-negation"]