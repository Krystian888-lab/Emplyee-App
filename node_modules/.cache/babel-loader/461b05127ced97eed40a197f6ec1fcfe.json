{"ast":null,"code":"var _jsxFileName = \"/home/krystian/CodersLab_JavaScript_Brudnopis/Emplyee-App/src/components/Employees/EmployeeDetails/EmployeeDetails.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react'; // import React from 'react';\n\nimport '../../../dev-assets/style.scss'; // import styles from './EmployeeDetails.module.scss';\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  // Zaczep useState służy do przechowywania odpowiedzi w danych \n  const [employees, setEmployees] = useState([]);\n  const [selectedEmployee, setSelectedEmployee] = useState(null); // w SelectedEmployee przechowywana jest informacja o jednym konkretnym pracowniku, dopóki żaden nie zostanie wybrany będzie wyświetlany 'null'\n  // Zaczep useEffect służy do wykonania żądania\n\n  useEffect(() => {\n    // Na adres puszczam żądanie GET aby dostać listę z pracownikami, która będzie zapisywana w stacie App, która będzie przekazywana do komponentu <Employees/>, najpierw komponenty się wyrenderują a potem zostanie puszczone zapytanie HTTP, po otrzymaniu odpowiedzi asynchronicznie zaktualizuje się nasz stan\n    // (fetch = sprowadzać)\n    fetch('http://dummy.restapiexample.com/api/v1/employees', {\n      method: 'GET' // headers: {\n      //   'Content-Type': 'application/json'\n      // },\n      // body: JSON.stringify({\n      // })\n\n    }).then(res => res.json()).then(res => {\n      console.log(res.data);\n      console.log(res.status);\n      const employeeArray = res.data;\n      console.log(employeeArray, \"employeeArray\"); // W stałej employees zapisuje to co nam zwraca ta metoda\n\n      setEmployees(employeeArray); // Teraz pracownicy z  początkowego stanu tablicy 'useState' employees -> zostają przypsiani do stałej employeeArray\n    }).catch(error => console.log(error));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    onClick: setSelectedEmployee,\n    className: \"c-btn c-btn--outline\",\n    children: \"Delete Employee\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"kLZeJOXXsMW1g5t7GqZIcKSw2as=\");\n\n_c = App;\n\nconst EmployeeDetails = ({\n  name,\n  salary,\n  age\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"t-promoted\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"t-promoted__btn\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"t-promoted__content\",\n        children: [\"Name: \", name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"t-promoted__content\",\n        children: [\"Salary: \", salary]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"t-promoted__content\",\n        children: [\"Age: \", age]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 9\n  }, this);\n};\n\n_c2 = EmployeeDetails;\nexport default EmployeeDetails;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"App\");\n$RefreshReg$(_c2, \"EmployeeDetails\");","map":{"version":3,"sources":["/home/krystian/CodersLab_JavaScript_Brudnopis/Emplyee-App/src/components/Employees/EmployeeDetails/EmployeeDetails.js"],"names":["React","useState","useEffect","App","employees","setEmployees","selectedEmployee","setSelectedEmployee","fetch","method","then","res","json","console","log","data","status","employeeArray","catch","error","EmployeeDetails","name","salary","age"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAA0C,OAA1C,C,CACA;;AACA,OAAO,gCAAP,C,CAEA;;;;AAEA,MAAMC,GAAG,GAAG,MAAM;AAAA;;AAChB;AACA,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BJ,QAAQ,CAAC,EAAD,CAA1C;AACA,QAAM,CAACK,gBAAD,EAAmBC,mBAAnB,IAA0CN,QAAQ,CAAC,IAAD,CAAxD,CAHgB,CAGgD;AAEhE;;AACAC,EAAAA,SAAS,CAAC,MAAK;AACb;AACA;AACAM,IAAAA,KAAK,CAAC,kDAAD,EAAqD;AACxDC,MAAAA,MAAM,EAAE,KADgD,CAExD;AACA;AACA;AACA;AAEA;;AAPwD,KAArD,CAAL,CASCC,IATD,CASMC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EATb,EAUCF,IAVD,CAUMC,GAAG,IAAI;AACXE,MAAAA,OAAO,CAACC,GAAR,CAAYH,GAAG,CAACI,IAAhB;AACAF,MAAAA,OAAO,CAACC,GAAR,CAAYH,GAAG,CAACK,MAAhB;AAEA,YAAMC,aAAa,GAAGN,GAAG,CAACI,IAA1B;AACAF,MAAAA,OAAO,CAACC,GAAR,CAAYG,aAAZ,EAA2B,eAA3B,EALW,CAMX;;AACAZ,MAAAA,YAAY,CAACY,aAAD,CAAZ,CAPW,CAQX;AACD,KAnBD,EAoBCC,KApBD,CAoBOC,KAAK,IAAIN,OAAO,CAACC,GAAR,CAAYK,KAAZ,CApBhB;AAqBD,GAxBQ,EAwBN,EAxBM,CAAT;AAyBA,sBACE;AAAQ,IAAA,OAAO,EAAEZ,mBAAjB;AAAsC,IAAA,SAAS,EAAC,sBAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAGD,CAlCD;;GAAMJ,G;;KAAAA,G;;AAmCN,MAAMiB,eAAe,GAAG,CAAC;AAACC,EAAAA,IAAD;AAAOC,EAAAA,MAAP;AAAeC,EAAAA;AAAf,CAAD,KAAyB;AAE3C,sBACE;AAAS,IAAA,SAAS,EAAC,YAAnB;AAAA,2BACA;AAAK,MAAA,SAAS,EAAC,iBAAf;AAAA,8BACE;AAAK,QAAA,SAAS,EAAC,qBAAf;AAAA,6BACSF,IADT;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAGE;AAAK,QAAA,SAAS,EAAC,qBAAf;AAAA,+BACWC,MADX;AAAA;AAAA;AAAA;AAAA;AAAA,cAHF,eAKE;AAAK,QAAA,SAAS,EAAC,qBAAf;AAAA,4BACQC,GADR;AAAA;AAAA;AAAA;AAAA;AAAA,cALF;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,UADF;AAYD,CAdL;;MAAMH,e;AAgBN,eAAeA,eAAf","sourcesContent":["import React, {useState, useEffect } from 'react';\n// import React from 'react';\nimport '../../../dev-assets/style.scss'\n\n// import styles from './EmployeeDetails.module.scss';\n\nconst App = () => {\n  // Zaczep useState służy do przechowywania odpowiedzi w danych \n  const [employees, setEmployees] = useState([]);\n  const [selectedEmployee, setSelectedEmployee] = useState(null); // w SelectedEmployee przechowywana jest informacja o jednym konkretnym pracowniku, dopóki żaden nie zostanie wybrany będzie wyświetlany 'null'\n\n  // Zaczep useEffect służy do wykonania żądania\n  useEffect(()=> {   \n    // Na adres puszczam żądanie GET aby dostać listę z pracownikami, która będzie zapisywana w stacie App, która będzie przekazywana do komponentu <Employees/>, najpierw komponenty się wyrenderują a potem zostanie puszczone zapytanie HTTP, po otrzymaniu odpowiedzi asynchronicznie zaktualizuje się nasz stan\n    // (fetch = sprowadzać)\n    fetch('http://dummy.restapiexample.com/api/v1/employees', {\n      method: 'GET',\n      // headers: {\n      //   'Content-Type': 'application/json'\n      // },\n      // body: JSON.stringify({\n\n      // })\n    })\n    .then(res => res.json())\n    .then(res => {\n      console.log(res.data);\n      console.log(res.status);\n\n      const employeeArray = res.data;\n      console.log(employeeArray, \"employeeArray\")\n      // W stałej employees zapisuje to co nam zwraca ta metoda\n      setEmployees(employeeArray);\n      // Teraz pracownicy z  początkowego stanu tablicy 'useState' employees -> zostają przypsiani do stałej employeeArray\n    })\n    .catch(error => console.log(error))\n  }, []);\n  return (\n    <button onClick={setSelectedEmployee} className='c-btn c-btn--outline'>Delete Employee</button>\n  )\n}\nconst EmployeeDetails = ({name, salary, age}) => {\n\n      return (\n        <section className='t-promoted'>\n        <div className='t-promoted__btn'>\n          <div className='t-promoted__content'>\n            Name: {name}</div>\n          <div className='t-promoted__content'>\n            Salary: {salary}</div>\n          <div className='t-promoted__content'>\n            Age: {age}</div>\n        </div>\n        </section>\n      )\n    }\n\nexport default EmployeeDetails;"]},"metadata":{},"sourceType":"module"}