{"ast":null,"code":"var _jsxFileName = \"/home/krystian/CodersLab_JavaScript_Brudnopis/Emplyee-App/src/components/Employees/Employees.js\";\nimport React from 'react'; // import styles from './Employees.module.scss';\n\nimport '../../dev-assets/style.scss';\nimport Employee from './Employee/Employee';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Employees = ({\n  showSelectedEmployee,\n  employees\n}) => {\n  // Tu tworzeni są pracownicy, przerabiani są pracownicy z tablicy na obiekty javascript-owi\n  // console.log(employees);\n  const people = /*#__PURE__*/_jsxDEV(\"ul\", {\n    className: \"o-row\",\n    children: employees.map((employee, index) => {\n      //zwracany komponent Employee\n      return /*#__PURE__*/_jsxDEV(Employee, {\n        name: employee.employee_name,\n        showSelectedEmployee: showSelectedEmployee,\n        id: employee.id\n      }, employee.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 22\n      }, this); // do pojedyńczego  komponentu przekazywana dalej jest metoda showEmployeeHandler a nazwa propsa to: 'showSelectedEmployee'\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 24\n  }, this); //Tu znajdują się pracownicy     \n\n\n  return (\n    /*#__PURE__*/\n    // <div className='o-row'>\n    //     <div className='o-col'> \n    _jsxDEV(_Fragment, {\n      children: people\n    }, void 0, false) // </div>\n    // </div>\n\n  );\n};\n\n_c = Employees;\nexport default Employees;\n\nvar _c;\n\n$RefreshReg$(_c, \"Employees\");","map":{"version":3,"sources":["/home/krystian/CodersLab_JavaScript_Brudnopis/Emplyee-App/src/components/Employees/Employees.js"],"names":["React","Employee","Employees","showSelectedEmployee","employees","people","map","employee","index","employee_name","id"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB,C,CACA;;AACA,OAAO,6BAAP;AAGA,OAAOC,QAAP,MAAqB,qBAArB;;;;AAEA,MAAMC,SAAS,GAAG,CAAC;AAACC,EAAAA,oBAAD;AAAuBC,EAAAA;AAAvB,CAAD,KAAuC;AAEjD;AACA;AAEA,QAAMC,MAAM,gBAAG;AAAI,IAAA,SAAS,EAAC,OAAd;AAAA,cAEfD,SAAS,CAACE,GAAV,CAAc,CAACC,QAAD,EAAWC,KAAX,KAAqB;AAC/B;AACA,0BAAS,QAAC,QAAD;AAA6B,QAAA,IAAI,EAAED,QAAQ,CAACE,aAA5C;AAA2D,QAAA,oBAAoB,EAAEN,oBAAjF;AAAuG,QAAA,EAAE,EAAEI,QAAQ,CAACG;AAApH,SAAgBH,QAAQ,CAACG,EAAzB;AAAA;AAAA;AAAA;AAAA,cAAT,CAF+B,CAG/B;AACH,KAJD;AAFe;AAAA;AAAA;AAAA;AAAA,UAAf,CALiD,CAejD;;;AACA;AAAA;AACI;AACA;AACI;AAAA,gBACCL;AADD,qBAHR,CAMQ;AACA;;AAPR;AASH,CAzBL;;KAAMH,S;AA2BN,eAAeA,SAAf","sourcesContent":["import React from 'react';\n// import styles from './Employees.module.scss';\nimport '../../dev-assets/style.scss'\n\n\nimport Employee from './Employee/Employee';\n\nconst Employees = ({showSelectedEmployee, employees}) => {\n\n        // Tu tworzeni są pracownicy, przerabiani są pracownicy z tablicy na obiekty javascript-owi\n        // console.log(employees);\n        \n        const people = <ul className='o-row'> \n        {\n        employees.map((employee, index) => {\n            //zwracany komponent Employee\n            return ( <Employee  key={employee.id} name={employee.employee_name} showSelectedEmployee={showSelectedEmployee} id={employee.id}/>);\n            // do pojedyńczego  komponentu przekazywana dalej jest metoda showEmployeeHandler a nazwa propsa to: 'showSelectedEmployee'\n        })\n    }\n        </ul>\n\n        //Tu znajdują się pracownicy     \n        return (\n            // <div className='o-row'>\n            //     <div className='o-col'> \n                <>\n                {people} \n                </>\n                // </div>\n                // </div>\n            )\n    }\n\nexport default Employees;"]},"metadata":{},"sourceType":"module"}